AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >

    This SAM example creates the following resources:

      S3 Bucket: S3 Bucket to hold the CloudTrail Logs
      CloudTrail: Create CloudTrail trail for all regions and configures it to delivery logs to the above S3 Bucket
      SNS Topic: Configure SNS topic to receive notifications when the CloudTrail log file is created in s3
      Elasticsearch Domain: Create Elasticsearch Domain to hold the CloudTrail logs for advanced analytics
      Lambda Function:  Create Function which get's triggered when SNS receives notification, reads the contents from s3 and stores them in Elasticsearch Domain

    Author: See fork

Globals:
  Function:
    Timeout: 900

Parameters:
  ESDomain:
    Type: String
    Description: "Short domain name of the target Elasticsearch index"
  ESFullDomain:
    Type: String
    Description: "Full Elasticsearch domain name like 'search-...-us-east-1.es.amazonaws.com'"

Outputs:
    S3Bucket:
      Description: "S3 Bucket Name where CloudTrail Logs are delivered"
      Value: !Ref S3Bucket
    LambdaFunction:
      Description: "Lambda Function that reads CloudTrail logs and stores them into Elasticsearch Domain"
      Value: !GetAtt IndexEventsFunction.Arn

Resources:
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags: 
        - 
          Key: "type"
          Value: "cloudtrail"
  SNSTopicPolicy: 
    Type: "AWS::SNS::TopicPolicy"
    Properties: 
      Topics: 
        - Ref: "SNSTopic"
      PolicyDocument: 
        Version: "2008-10-17"
        Statement: 
          - 
            Sid: "AWSCloudTrailSNSPolicy"
            Effect: "Allow"
            Principal: 
              Service: "cloudtrail.amazonaws.com"
            Resource: "*"
            Action: "SNS:Publish"

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      Tags: 
        - 
          Key: "type"
          Value: "cloudtrail"

  S3BucketPolicy: 
    Type: "AWS::S3::BucketPolicy"
    Properties: 
      Bucket: 
        Ref: S3Bucket
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Sid: "AWSCloudTrailAclCheck"
            Effect: "Allow"
            Principal: 
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:GetBucketAcl"
            Resource: 
              !Sub |-
                arn:aws:s3:::${S3Bucket}
          - 
            Sid: "AWSCloudTrailWrite"
            Effect: "Allow"
            Principal: 
              Service: "cloudtrail.amazonaws.com"
            Action: "s3:PutObject"
            Resource:
              !Sub |-
                arn:aws:s3:::${S3Bucket}/AWSLogs/${AWS::AccountId}/*
            Condition: 
              StringEquals:
                s3:x-amz-acl: "bucket-owner-full-control"
                
  CloudTrail:
    Type: AWS::CloudTrail::Trail
    DependsOn:
      - SNSTopicPolicy
      - S3BucketPolicy
    Properties: 
        S3BucketName: 
          Ref: S3Bucket
        SnsTopicName: 
          Fn::GetAtt: 
            - SNSTopic
            - TopicName
        IsLogging: true
        EnableLogFileValidation: true
        IncludeGlobalServiceEvents: true
        IsMultiRegionTrail: true
        EventSelectors:
          - DataResources:
              - Type: AWS::Lambda::Function
                Values: 
                  - arn:aws:lambda
          - DataResources:
              - Type: AWS::S3::Object
                Values: 
                  - "arn:aws:s3:::"

  IndexEventsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: index-events/
      Handler: app.lambda_handler
      Runtime: python3.7
      Tags:
        type: "cloudtrail"
      Environment:
        Variables:
          ES_PATH: 
            Ref: ESFullDomain
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            Topic: !Ref SNSTopic
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref S3Bucket
        - ElasticsearchHttpPostPolicy:
            DomainName: 
              Ref: ESDomain